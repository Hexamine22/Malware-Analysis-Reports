import os
import pefile
import json

hex_values = [0x51152848, 0xA1FF2099, 0xACF94998, 0x100B7006, 0x6131FE88, 0x20311FC5, 0x291B6F4B, 0x28312045, 0xD50F3890, 0x9209475C, 0xED194839, 0x51EBFFE8, 0x2CFF48C8, 0xD3BF09F8, 0x66EB26EA, 0xE023DF69, 0xDD205726, 0xAE47F5DD, 0xE209D82B]
#hashes of dll names used to build the dll_exports.json file

def get_dll_names(directory):
    dll_names = []
    for root, _, files in os.walk(directory):
        for file in files:
            if file.lower().endswith((".dll",".drv")):
                dll_names.append(file)
    return dll_names

dll_filenames = get_dll_names(r'C:\Windows\System32')
    
def rotate_right(value, shift):
    return ((value >> shift) | (value << (32 - shift))) & 0xFFFFFFFF  
def Calculate_Dll_Name_Hash(DllName,Seed):
    hash1 = Seed
    i = 0
    DllName = DllName + "\x00"
    while(1):
        v2 = ord(DllName[i])
        if v2 >= 0x41 and v2 <=0x5A:
            v2 = v2 | 0x20
            v2 = v2 & 0xFFFF
        hash1 = v2 +  rotate_right(hash1, 0xD)
        hash1 = hash1 & 0xFFFFFFFF
        if DllName[i] == '\0':
            break
        i = i + 1
    return hash1
dll_names = []

for val in hex_values:
    hash1 = val ^ 0x10035FFF
    for name in dll_filenames:
        hash2 = Calculate_Dll_Name_Hash(name,0)
        if hash2 == hash1:
            dll_names.append(name)
            print(name)
            break

#retrieves all the exports for each dll in dll_names
#inspired by oalabs
        
exports_json = {}
for i in range(len(dll_names)):
    exports = []
    DLLPATH = "C:\Windows\System32\\" + dll_names[i]
    print(DLLPATH)
    try:
        dll = pefile.PE(DLLPATH)
    except:
        continue
    for exp in dll.DIRECTORY_ENTRY_EXPORT.symbols:
        try:
            exports.append(exp.name.decode('utf-8'))
        except:
            continue
    exports_json[dll_names[i]] = exports

open('dll_exports.json','w').write(json.dumps(exports_json))
